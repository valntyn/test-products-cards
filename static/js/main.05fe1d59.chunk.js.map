{"version":3,"sources":["helplers/fetchClients.ts","features/productSlice/productsSlice.ts","api/products.ts","features/querySlice/querySlice.ts","features/visibleProductsSlice/visibleProductsSlice.ts","types/Filter.ts","features/FilterSlice/filterSlice.ts","app/store.ts","variables.ts","Components/Navbar/Navbar.tsx","Pages/PageNotFound/PageNotFound.tsx","app/hooks.ts","app/selectors.ts","Components/Banner/Banner.tsx","helplers/searchHelpers.ts","Components/FilterBar/FilterBar.tsx","features/visibleProductsSlice/selectVisibleProducts.ts","Components/ProductCard/ProductCard.tsx","Components/ProductsList/ProductsList.tsx","Components/Cataloge/Cataloge.tsx","Components/PaginateLink/PaginateLink.tsx","Components/SortLink/SortLink.tsx","Components/Dropdown/Dropdown.tsx","Components/InputField/InputField.tsx","Components/Modal/Modal.tsx","Components/Form/Form.tsx","Components/LabelLink/LabelLink.tsx","Components/Pagination/Pagination.tsx","Components/Spinner/Spinner.tsx","Pages/Homepage/Homepage.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","delay","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","client","getProducts","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","productsSlice","createSlice","name","initialState","products","isLoad","reducers","addProduct","state","action","push","payload","removeProduct","filter","product","id","extraReducers","builder","addCase","pending","fulfilled","_productsSlice$action","actions","appliedQuerySlice","appliedQuery","setQuery","visibleProductsSlice","visibleProducts","setVisibleProducts","Filter","None","filterSlice","changeFilter","_","store","configureStore","reducer","productReducer","visibleProductReducer","appliedQueryReducer","filters","filtersReducer","SignupSchema","Yup","shape","title","min","max","matches","required","author","year","rating","price","discountPercentage","brand","stock","thumbnail","Navbar","React","memo","_jsxs","className","children","_jsx","NavLink","to","_ref","isActive","classNames","_ref2","Link","rel","target","PageNotFound","useAppDispatch","useDispatch","useAppSelector","useSelector","selectProductsBySearch","createSelector","allProducts","query","description","toLowerCase","trim","includes","selectProductsByFilter","Price","slice","sort","a","b","Alphabetically","localeCompare","Brand","Rating","Stock","Banner","src","alt","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","_slicedToArray","key","value","delete","Array","isArray","part","append","set","FilterBar","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","dispatch","get","_useState","useState","_useState2","search","setSearch","debouncedOnChange","useDebouncedCallback","event","useEffect","htmlFor","type","placeholder","onChange","e","page","autoComplete","selectedProducts","ProductCard","fixedPrice","toFixed","onClick","currentId","stopPropagation","handleClickDelete","concat","ProductsList","map","Cataloge","PaginateLink","itemsPerPage","defaultPage","quantity","isAll","perPage","SortLink","sortType","sortBy","fixedSort","getSearchWithItemsPerPage","Dropdown","total","isOpenPage","setIsOpenPage","_useState3","_useState4","isOpenSort","setIsOpenSort","handleDocumentClick","document","addEventListener","removeEventListener","current","InputField","error","touched","values","handleChange","step","Modal","active","setActive","FormForNewItem","isOpen","setIsOpen","modalActive","setModalActive","Formik","initialValues","validationSchema","onSubmit","newProduct","Date","errors","Form","LabelLink","currentPage","getSearch","Pagination","ReactPaginate","containerClassName","previousLinkClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","activeLinkClassName","disabledClassName","marginPagesDisplayed","forcePage","pageRangeDisplayed","previousLabel","nextLabel","onPageChange","newPage","selected","breakLabel","pageCount","Spinner","Homepage","totalPages","Math","ceil","lastItemIndex","firstItemIndex","currentItem","App","_Fragment","Routes","Route","path","element","Navigate","replace","ReactDOM","render","Provider","Router","getElementById"],"mappings":"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","file":"static/js/main.05fe1d59.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://dummyjson.com';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getProductsFromServer } from '../../api/products';\nimport { Product } from '../../types/Product';\n\ntype ProductState = {\n  products: Product[];\n  isLoad: boolean;\n};\n\nexport const getProducts = createAsyncThunk(\n  'products/load',\n\n  async () => {\n    return getProductsFromServer();\n  },\n);\n\nconst initialState: ProductState = {\n  products: [],\n  isLoad: false,\n};\n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    addProduct: (state, action) => {\n      state.products.push(action.payload);\n    },\n    removeProduct: (state, action) => {\n      state.products = state.products\n        .filter(product => product.id !== action.payload);\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getProducts.pending, (state) => {\n        state.isLoad = true;\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.products = action.payload.products;\n        state.isLoad = false;\n      });\n  },\n});\n\nexport const {\n  addProduct,\n  removeProduct,\n} = productsSlice.actions;\n\nexport default productsSlice.reducer;\n","import { client } from '../helplers/fetchClients';\nimport { Root } from '../types/Root';\n\nexport const getProductsFromServer = () => {\n  return client.get<Root>('/products/?limit=0');\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype QueryState = {\n  appliedQuery: string;\n};\n\nconst initialState: QueryState = {\n  appliedQuery: '',\n};\n\nexport const appliedQuerySlice = createSlice({\n  name: 'appliedQuery',\n  initialState,\n  reducers: {\n    setQuery: (state, action: PayloadAction<string>) => {\n      state.appliedQuery = action.payload;\n    },\n  },\n});\n\nexport const {\n  setQuery,\n} = appliedQuerySlice.actions;\n\nexport default appliedQuerySlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Product } from '../../types/Product';\n\ntype VisibleState = {\n  visibleProducts: Product[];\n};\n\nconst initialState: VisibleState = {\n  visibleProducts: [],\n};\n\nexport const visibleProductsSlice = createSlice({\n  name: 'visibleProducts',\n  initialState,\n  reducers: {\n    setVisibleProducts: (state, action: PayloadAction<Product[]>) => {\n      state.visibleProducts = action.payload;\n    },\n  },\n});\n\nexport const {\n  setVisibleProducts,\n} = visibleProductsSlice.actions;\n\nexport default visibleProductsSlice.reducer;\n","export enum Filter {\n  None = 'None',\n  Alphabetically = 'Alphabetically',\n  Price = 'Price',\n  Stock = 'Stock',\n  Rating = 'Rating',\n  Brand = 'Brand',\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { Filter } from '../../types/Filter';\n\nconst initialState: Filter = Filter.None;\n\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    changeFilter: (_, action) => action.payload,\n  },\n});\n\nexport const { changeFilter } = filterSlice.actions;\n\nexport default filterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport productReducer from '../features/productSlice/productsSlice';\nimport appliedQueryReducer from '../features/querySlice/querySlice';\nimport visibleProductReducer\n  from '../features/visibleProductsSlice/visibleProductsSlice';\nimport filtersReducer from '../features/FilterSlice/filterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    products: productReducer,\n    visibleProducts: visibleProductReducer,\n    appliedQuery: appliedQueryReducer,\n    filters: filtersReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import * as Yup from 'yup';\n\nexport const DEFAULT_PAGE = '1';\nexport const DEFAULT_ITEMS_PER_PAGE = '6';\nexport const GITHUB = 'https://github.com/valntyn';\n\nexport const SignupSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(/^[0-9a-zA-Z_\\-/.]+$/, 'Forbidden symbols')\n    .required('Required'),\n  author: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(/^[0-9a-zA-Z_\\-/.]+$/, 'Forbidden symbols')\n    .required('Required'),\n  year: Yup.number()\n    .min(1900, 'Too Old!')\n    .required('Required'),\n  rating: Yup.number()\n    .max(5, 'Too Much! enter from 1 to 5')\n    .required('Required'),\n  price: Yup.number()\n    .min(0, 'Too Less!')\n    .max(100000, 'Too much')\n    .required('Required'),\n  discountPercentage: Yup.number()\n    .max(1, 'Too Much! should be from 0.01-1.00')\n    .required('Required'),\n  brand: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(/^[0-9a-zA-Z_\\-/.]+$/, 'Forbidden symbols')\n    .required('Required'),\n  stock: Yup.number()\n    .required('Required'),\n  thumbnail: Yup.string()\n    .required('Required'),\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { GITHUB } from '../../variables';\nimport './Navbar.scss';\n\nexport const Navbar = React.memo(\n  () => {\n    return (\n      <header className=\"header header__dimensions\">\n        <div className=\"header__right-box\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'header__box-item',\n              { 'header__box-item--active': isActive },\n            )}\n          >\n            <p>HOME PAGE</p>\n          </NavLink>\n          <NavLink\n            to=\"/test-page-not-found\"\n            className={({ isActive }) => classNames(\n              'header__box-item',\n              { 'header__box-item--active': isActive },\n            )}\n          >\n            <p>TEST PAGE</p>\n          </NavLink>\n        </div>\n        <div className=\"header__left-box\">\n          <p className=\"header__box-item\">\n            test-task for SheepFish\n          </p>\n          <Link\n            to={GITHUB}\n            className=\"header__box-item\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Link to my GITHUB\n          </Link>\n        </div>\n      </header>\n    );\n  },\n);\n","import './PageNotFound.scss';\n\nexport const PageNotFound = () => {\n  return (\n    <main className=\"pageNotFound__wrap\">\n      <p\n        className=\"pageNotFound__text\"\n      >\n        Page not found, please return back\n      </p>\n      <div className=\"pageNotFound__img\" />\n    </main>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { Filter } from '../types/Filter';\nimport { Product } from '../types/Product';\n\nexport const selectAllProducts\n  = (state: { products: { products: Product[]; }; }) => state.products.products;\n\nexport const selectQuery\n  = (\n    state: {\n      appliedQuery: { appliedQuery: string; };\n    },\n  ) => state.appliedQuery.appliedQuery;\n\nexport const selectActiveFilter\n  = (state: { filters: Filter; }) => state.filters;\n\nexport const selectProductsBySearch = createSelector(\n  [selectAllProducts, selectQuery],\n  (allProducts: Product[], query: string) => {\n    if (query) {\n      return allProducts.filter(({ title, description, brand }) => (\n        title.toLowerCase().trim().includes(query)\n        || description?.toLowerCase().trim().includes(query)\n        || brand.toLowerCase().trim().includes(query)\n      ));\n    }\n\n    return allProducts;\n  },\n);\n\nexport const selectProductsByFilter = createSelector(\n  [selectProductsBySearch, selectActiveFilter],\n  (allProducts: Product[], filter: Filter) => {\n    switch (filter) {\n      case (Filter.None):\n        return allProducts;\n\n      case (Filter.Price): {\n        return allProducts.slice().sort((a, b) => b.price - a.price);\n      }\n\n      case (Filter.Alphabetically): {\n        return allProducts.slice()\n          .sort((a, b) => a.title.localeCompare(b.title));\n      }\n\n      case (Filter.Brand): {\n        return allProducts.slice()\n          .sort((a, b) => a.brand.localeCompare(b.brand));\n      }\n\n      case (Filter.Rating): {\n        return allProducts.slice()\n          .sort((a, b) => b.rating - a.rating);\n      }\n\n      case (Filter.Stock): {\n        return allProducts.slice()\n          .sort((a, b) => b.stock - a.stock);\n      }\n\n      default:\n        return allProducts;\n    }\n  },\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Banner = React.memo(\n  () => {\n    return (\n      <div className=\"homepage__banner-box\">\n        <Link to=\"/home\">\n          <img\n            className=\"homepage__banner\"\n            src=\"./assets/banner.png\"\n            alt=\"products-banner\"\n          />\n        </Link>\n      </div>\n    );\n  },\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { useState, useEffect, memo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useAppDispatch } from '../../app/hooks';\nimport { setQuery } from '../../features/querySlice/querySlice';\nimport { getSearchWith } from '../../helplers/searchHelpers';\nimport './FilterBar.scss';\n\nexport const FilterBar = memo(\n  () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const dispatch = useAppDispatch();\n\n    const query = searchParams.get('query') || '';\n    const [search, setSearch] = useState(query);\n\n    const debouncedOnChange = useDebouncedCallback((event) => {\n      dispatch(setQuery(event.target.value));\n    }, 500);\n\n    const handleQuery\n      = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n\n        setSearchParams(\n          getSearchWith(searchParams, {\n            query: event.target.value || null,\n            page: '1',\n          }),\n        );\n      };\n\n    useEffect(() => {\n      dispatch(setQuery(query));\n    }, []);\n\n    return (\n      <div className=\"filter\">\n        <label\n          className=\"filter__box-input\"\n          htmlFor=\"input\"\n        >\n          <button\n            type=\"button\"\n            className=\"filter__input-button\"\n          >\n            <div className=\"filter__input-img\" />\n          </button>\n          <input\n            id=\"input\"\n            type=\"text\"\n            className=\"filter__input\"\n            placeholder=\"Search in catalogue...\"\n            value={search}\n            onChange={(e) => {\n              handleQuery(e);\n              debouncedOnChange(e);\n            }}\n            autoComplete=\"off\"\n          />\n        </label>\n      </div>\n    );\n  },\n);\n","import { RootState } from '../../app/store';\n\nexport const selectedProducts\n  = (state: RootState) => state.visibleProducts.visibleProducts;\n","import { Link } from 'react-router-dom';\nimport { useAppDispatch } from '../../app/hooks';\nimport { removeProduct } from '../../features/productSlice/productsSlice';\nimport { Product } from '../../types/Product';\nimport './ProductCard.scss';\n\ntype PropTypes = {\n  product: Product\n};\n\nexport const ProductCard: React.FC<PropTypes> = ({ product }) => {\n  const {\n    price,\n    discountPercentage,\n    title,\n    stock,\n    thumbnail,\n    rating,\n    brand,\n    id,\n  } = product;\n\n  const dispatch = useAppDispatch();\n\n  const fixedPrice = (price - (price / 100) * discountPercentage).toFixed();\n\n  const handleClickDelete = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    currentId: number,\n  ) => {\n    e.stopPropagation();\n\n    dispatch(removeProduct(currentId));\n  };\n\n  return (\n    <li className=\"card\">\n      <button\n        type=\"button\"\n        className=\"card__button-delete\"\n        onClick={(e) => handleClickDelete(e, id)}\n      >\n        <div className=\"card__cross\" />\n      </button>\n      <Link\n        to={`/${id}`}\n      >\n        <div className=\"card__img-box\">\n          <img\n            src={thumbnail}\n            alt=\"product-card\"\n            className=\"card__img\"\n          />\n        </div>\n      </Link>\n      <div className=\"card__wrapper\">\n        <div className=\"card__information\">\n          <h6 className=\"card__name\">{title}</h6>\n        </div>\n        <div className=\"card__price\">\n          <h2 className=\"card__price-amount\">\n            {`$${fixedPrice}`}\n          </h2>\n          <p className=\"card__price-amount--old\">\n            {`$${price}`}\n          </p>\n        </div>\n        <div className=\"card__desc\">\n          <div className=\"card__box-left\">\n            <p className=\"card__desc-title\">Brand</p>\n            <p className=\"card__desc-title\">Rating</p>\n            <p className=\"card__desc-title\">Stock</p>\n          </div>\n          <div className=\"card__box-right\">\n            <p className=\"card__desc-char\">{brand}</p>\n            <p className=\"card__desc-char\">{rating}</p>\n            <p className=\"card__desc-char\">{stock}</p>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n","import { useAppSelector } from '../../app/hooks';\nimport { selectedProducts }\n  from '../../features/visibleProductsSlice/selectVisibleProducts';\nimport { ProductCard } from '../ProductCard';\nimport './ProductList.scss';\n\nexport const ProductsList = () => {\n  const visibleProducts = useAppSelector(selectedProducts);\n\n  return (\n    <ul className=\"productList\">\n      {visibleProducts.map(product => (\n        <ProductCard key={product.id} product={product} />\n      ))}\n    </ul>\n  );\n};\n","import { FilterBar } from '../FilterBar';\nimport { ProductsList } from '../ProductsList';\n\nexport const Cataloge = () => {\n  return (\n    <div className=\"cataloge\">\n      <FilterBar />\n      <ProductsList />\n    </div>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helplers/searchHelpers';\nimport './PaginateLink.scss';\n\ntype PropTypes = {\n  value: string;\n  defaultPage: string;\n  quantity?: number;\n};\n\nexport const PaginateLink: React.FC<PropTypes> = ({\n  value,\n  defaultPage,\n  quantity,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const isAll = value === 'All';\n\n  const getSearchWithItemsPerPage = (itemsPerPage: string) => {\n    if (isAll) {\n      return getSearchWith(searchParams, {\n        page: defaultPage,\n        perPage: `${quantity}`,\n      });\n    }\n\n    if (itemsPerPage && !isAll) {\n      return getSearchWith(searchParams, {\n        page: defaultPage,\n        perPage: itemsPerPage,\n      });\n    }\n\n    return getSearchWith(searchParams, {\n      perPage: null,\n    });\n  };\n\n  return (\n    <Link\n      className=\"paginate\"\n      to={{\n        search: getSearchWithItemsPerPage(value),\n      }}\n    >\n      {value}\n    </Link>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { useAppDispatch } from '../../app/hooks';\nimport { changeFilter } from '../../features/FilterSlice/filterSlice';\nimport { getSearchWith } from '../../helplers/searchHelpers';\nimport { DEFAULT_PAGE } from '../../variables';\n\ntype PropTypes = {\n  sort: string;\n  title: string;\n};\n\nexport const SortLink: React.FC<PropTypes> = ({\n  title,\n  sort,\n}) => {\n  const [searchParams] = useSearchParams();\n  const dispatch = useAppDispatch();\n\n  const getSearchWithItemsPerPage = (sortBy: string) => {\n    const fixedSort = sortBy.toLowerCase();\n\n    return getSearchWith(searchParams, {\n      page: DEFAULT_PAGE,\n      sort: fixedSort,\n    });\n  };\n\n  const handleClick = (sortType: string) => () => {\n    dispatch(changeFilter(sortType));\n  };\n\n  return (\n    <Link\n      className=\"paginate\"\n      to={{\n        search: getSearchWithItemsPerPage(sort),\n      }}\n      onClick={handleClick(sort)}\n    >\n      {title}\n    </Link>\n  );\n};\n","import { memo, useEffect, useState } from 'react';\nimport { PaginateLink } from '../PaginateLink';\nimport { SortLink } from '../SortLink/SortLink';\nimport './Dropdown.scss';\n\ntype PropTypes = {\n  itemsPerPage: number;\n  total: number;\n  defaultPage: string;\n};\n\nexport const Dropdown: React.FC<PropTypes> = memo(\n  ({\n    itemsPerPage,\n    total,\n    defaultPage,\n  }) => {\n    const [isOpenPage, setIsOpenPage] = useState(false);\n    const [isOpenSort, setIsOpenSort] = useState(false);\n\n    useEffect(() => {\n      if (!isOpenPage && !isOpenSort) {\n        return undefined;\n      }\n\n      const handleDocumentClick = () => {\n        setIsOpenPage(false);\n        setIsOpenSort(false);\n      };\n\n      document.addEventListener('click', handleDocumentClick);\n\n      return () => {\n        document.removeEventListener('click', handleDocumentClick);\n      };\n    }, [isOpenPage, isOpenSort]);\n\n    return (\n      <div className=\"dropdown__sort-buttons\">\n        <div className=\"dropdown__sort-right\">\n          <div className=\"dropdown__dropdown-trigger\">\n            <button\n              type=\"button\"\n              className=\"\n                  dropdown__button-dropdown\n                  dropdown__button-dropdown--right\n              \"\n              onClick={() => {\n                setIsOpenPage(current => !current);\n              }}\n            >\n              <span className=\"dropdown__button-text\">\n                {itemsPerPage}\n              </span>\n              <span className=\"dropdown__button-text\">\n                Items on page\n              </span>\n              <img\n                src=\"./assets/arr-down.svg\"\n                alt=\"dropdown\"\n                className=\"dropdown__drop-icon\"\n              />\n            </button>\n            {isOpenPage && (\n              <ul className=\"dropdown__dropdown-content\">\n                {['6', '12', '20', 'All'].map(value => (\n                  <li>\n                    <PaginateLink\n                      key={value}\n                      value={value}\n                      quantity={total}\n                      defaultPage={defaultPage}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n        <div className=\"dropdown__sort-right\">\n          <div className=\"dropdown__dropdown-trigger\">\n            <button\n              type=\"button\"\n              className=\"\n                  dropdown__button-dropdown\n                  dropdown__button-dropdown--right\n              \"\n              onClick={() => {\n                setIsOpenSort(current => !current);\n              }}\n            >\n              <span className=\"dropdown__button-text\">\n                Sort by\n              </span>\n              <img\n                src=\"./assets/arr-down.svg\"\n                alt=\"dropdown\"\n                className=\"dropdown__drop-icon\"\n              />\n            </button>\n            {isOpenSort && (\n              <ul className=\"dropdown__dropdown-content\">\n                {['Price', 'Stock', 'Alphabetically', 'Rating', 'Brand']\n                  .map(value => (\n                    <li>\n                      <SortLink\n                        key={value}\n                        sort={value}\n                        title={value}\n                      />\n                    </li>\n                  ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { ChangeEvent } from 'react';\n\ntype PropTypes = {\n  error: string | undefined,\n  touched: boolean | undefined;\n  values: string | number;\n  handleChange:\n  {\n    (e: ChangeEvent<unknown>)\n    : void; <T = string | ChangeEvent<unknown>>\n    (field: T): T extends ChangeEvent<unknown> ? void :\n      (e: string | ChangeEvent<unknown>) => void;\n  }\n  type: string;\n  placeholder: string;\n  name: string;\n  max?: string;\n  min?: string;\n  step?: string;\n};\n\nexport const InputField: React.FC<PropTypes> = ({\n  error,\n  touched,\n  values,\n  handleChange,\n  type,\n  placeholder,\n  name,\n  min,\n  max,\n  step,\n}) => {\n  return (\n    <div className=\"form__field\">\n      <input\n        className=\"form__inp\"\n        type={type}\n        name={name}\n        onChange={handleChange}\n        value={values}\n        placeholder={placeholder}\n        min={min}\n        max={max}\n        step={step}\n        autoComplete=\"off\"\n      />\n      {error && (\n        <p className=\"form__error\">\n          {error && touched && error}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Modal.scss';\n\ntype PropTypes = {\n  active: boolean;\n  setActive: (active: boolean) => void;\n  children: React.ReactNode;\n};\n\nexport const Modal: React.FC<PropTypes> = ({ active, setActive, children }) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        'modal',\n        {\n          'modal--active': active,\n        },\n      )}\n      onClick={() => setActive(false)}\n    >\n      <button\n        type=\"button\"\n        className=\"modal__content\"\n        onClick={e => e.stopPropagation()}\n      >\n        {children}\n      </button>\n    </button>\n  );\n};\n","import { memo, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { InputField } from '../InputField';\nimport './Form.scss';\nimport { NewProduct } from '../../types/Product';\nimport { useAppDispatch } from '../../app/hooks';\nimport { addProduct } from '../../features/productSlice/productsSlice';\nimport { SignupSchema } from '../../variables';\nimport { Modal } from '../Modal';\n\nexport const FormForNewItem = memo(\n  () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [modalActive, setModalActive] = useState(false);\n    const dispatch = useAppDispatch();\n\n    const handleSubmit = (values: NewProduct) => {\n      const {\n        thumbnail,\n        stock,\n        brand,\n        discountPercentage,\n        price,\n        rating,\n        author,\n        title,\n      } = values;\n\n      const newProduct = {\n        id: +new Date(),\n        thumbnail,\n        title,\n        author,\n        rating: +rating,\n        price: +price,\n        discountPercentage: +discountPercentage,\n        brand,\n        stock: +stock,\n      };\n\n      dispatch(addProduct(newProduct));\n      setModalActive(true);\n    };\n\n    const initialValues: NewProduct = {\n      title: '',\n      author: 'TestName',\n      year: '2023',\n      rating: '4.22',\n      price: '',\n      discountPercentage: '0.32',\n      brand: 'Samsung',\n      stock: '',\n      thumbnail: 'https://i.dummyjson.com/data/products/5/thumbnail.jpg',\n    };\n\n    return (\n      <div className=\"form form__dimension\">\n        <button\n          type=\"button\"\n          className=\"form__button\"\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          <p className=\"form__button-title\">\n            Open form to add new product\n          </p>\n        </button>\n\n        {isOpen && (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={SignupSchema}\n            onSubmit={handleSubmit}\n          >\n            {\n              ({\n                values,\n                errors,\n                touched,\n                handleChange,\n              }) => (\n                <Form className=\"form__form\">\n                  <InputField\n                    placeholder=\"Enter the title of a product\"\n                    error={errors.title}\n                    touched={touched.title}\n                    values={values.title}\n                    handleChange={handleChange}\n                    type=\"text\"\n                    name=\"title\"\n                  />\n                  <InputField\n                    placeholder=\"Enter your name\"\n                    error={errors.author}\n                    touched={touched.author}\n                    values={values.author}\n                    handleChange={handleChange}\n                    type=\"text\"\n                    name=\"author\"\n                  />\n                  <InputField\n                    placeholder=\"Enter the year of product creation\"\n                    error={errors.year}\n                    touched={touched.year}\n                    values={values.year}\n                    handleChange={handleChange}\n                    min=\"1900\"\n                    max=\"2023\"\n                    type=\"number\"\n                    name=\"year\"\n                  />\n                  <InputField\n                    placeholder=\"Enter the product's rating \"\n                    error={errors.rating}\n                    touched={touched.rating}\n                    values={values.rating}\n                    handleChange={handleChange}\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    name=\"rating\"\n                  />\n                  <InputField\n                    placeholder=\"Enter the price in dollars\"\n                    error={errors.price}\n                    touched={touched.price}\n                    values={values.price}\n                    handleChange={handleChange}\n                    type=\"number\"\n                    min=\"0\"\n                    name=\"price\"\n                  />\n                  <InputField\n                    placeholder=\"Enter the discount\"\n                    error={errors.discountPercentage}\n                    touched={touched.discountPercentage}\n                    values={values.discountPercentage}\n                    handleChange={handleChange}\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    name=\"discountPercentage\"\n                  />\n                  <InputField\n                    placeholder=\"Enter the name of the brand\"\n                    error={errors.brand}\n                    touched={touched.brand}\n                    values={values.brand}\n                    handleChange={handleChange}\n                    type=\"text\"\n                    name=\"brand\"\n                  />\n                  <InputField\n                    placeholder=\"Enter quantity\"\n                    error={errors.stock}\n                    touched={touched.stock}\n                    values={values.stock}\n                    handleChange={handleChange}\n                    type=\"number\"\n                    min=\"0\"\n                    name=\"stock\"\n                  />\n                  <InputField\n                    placeholder=\"Enter url of product\"\n                    error={errors.thumbnail}\n                    touched={touched.thumbnail}\n                    values={values.thumbnail}\n                    handleChange={handleChange}\n                    type=\"text\"\n                    name=\"thumbnail\"\n                  />\n                  <button\n                    className=\"form__button form__button--submit\"\n                    type=\"submit\"\n                  >\n                    Add the new product to the list\n                  </button>\n                </Form>\n              )\n            }\n          </Formik>\n        )}\n        <Modal setActive={setModalActive} active={modalActive}>\n          Product was successfully created\n        </Modal>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helplers/searchHelpers';\n\ntype PropTypes = {\n  currentPage: number;\n  value: string;\n};\n\nexport const LabelLink: React.FC<PropTypes> = ({ currentPage, value }) => {\n  const [searchParams] = useSearchParams();\n\n  const getSearch = ((title: string) => {\n    switch (title) {\n      case '>':\n        return getSearchWith(searchParams, {\n          page: `${currentPage + 1}`,\n        });\n\n      case '<':\n        return getSearchWith(searchParams, {\n          page: `${currentPage - 1}`,\n        });\n\n      default:\n        return getSearchWith(searchParams, {\n          page: `${currentPage}`,\n        });\n    }\n  });\n\n  return (\n    <Link\n      to={{\n        search: getSearch(value),\n      }}\n    >\n      {value}\n    </Link>\n  );\n};\n","import ReactPaginate from 'react-paginate';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helplers/searchHelpers';\nimport { LabelLink } from '../LabelLink';\nimport './Pagination.scss';\n\ntype PropTypes = {\n  total: number;\n  currentPage: number;\n};\n\nexport const Pagination: React.FC<PropTypes> = ({ total, currentPage }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleClick = (newPage: number) => {\n    setSearchParams(\n      getSearchWith(searchParams, { page: `${newPage}` || null }),\n    );\n  };\n\n  return (\n    <ReactPaginate\n      containerClassName=\"pagination pagination__position\"\n      previousLinkClassName=\"pagination__item\"\n      nextLinkClassName=\"pagination__item\"\n      pageLinkClassName=\"pagination__item\"\n      breakLinkClassName=\"pagination__item\"\n      activeLinkClassName=\"pagination__item--active\"\n      disabledClassName=\"pagination__item--disabled\"\n      marginPagesDisplayed={1}\n      forcePage={+currentPage - 1}\n      pageRangeDisplayed={6}\n      previousLabel={\n        <LabelLink currentPage={currentPage} value=\"<\" />\n      }\n      nextLabel={\n        <LabelLink currentPage={currentPage} value=\">\" />\n      }\n      onPageChange={(data) => handleClick(data.selected + 1)}\n      breakLabel=\"...\"\n      pageCount={total}\n    />\n  );\n};\n","import './Spinner.scss';\n\nexport const Spinner = () => {\n  return (\n    <div className=\"spinner\" />\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { selectProductsByFilter } from '../../app/selectors';\nimport { Banner } from '../../Components/Banner';\nimport { Cataloge } from '../../Components/Cataloge';\nimport { Dropdown } from '../../Components/Dropdown';\nimport { FormForNewItem } from '../../Components/Form';\nimport { Pagination } from '../../Components/Pagination';\nimport { Spinner } from '../../Components/Spinner';\nimport { getProducts } from '../../features/productSlice/productsSlice';\nimport { setVisibleProducts } from '../../features/visibleProductsSlice';\nimport { DEFAULT_ITEMS_PER_PAGE, DEFAULT_PAGE } from '../../variables';\nimport './Homepage.scss';\n\nexport const Homepage = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, []);\n\n  const [searchParams] = useSearchParams();\n\n  const { isLoad } = useAppSelector(state => state.products);\n  const products = useSelector(selectProductsByFilter);\n  const quantity = products.length;\n\n  const currentPage = +(searchParams.get('page') || DEFAULT_PAGE);\n  const itemsPerPage = +(searchParams.get('perPage') || DEFAULT_ITEMS_PER_PAGE);\n  const totalPages = Math.ceil(quantity / itemsPerPage);\n\n  const lastItemIndex = currentPage * itemsPerPage;\n  const firstItemIndex = lastItemIndex - itemsPerPage;\n  const currentItem = products.slice(firstItemIndex, lastItemIndex);\n\n  useEffect(() => {\n    dispatch(setVisibleProducts(currentItem));\n  }, [quantity, currentPage, products]);\n\n  if (isLoad) {\n    return (\n      <main className=\"homepage homepage__container\">\n        <Spinner />\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"homepage homepage__container\">\n      <Banner />\n      <div className=\"homepage__grid\">\n        <Pagination\n          currentPage={currentPage}\n          total={totalPages}\n        />\n        <Dropdown\n          total={quantity}\n          defaultPage={DEFAULT_PAGE}\n          itemsPerPage={itemsPerPage}\n        />\n        <Cataloge />\n        <FormForNewItem />\n      </div>\n    </main>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './Components/Navbar';\nimport { PageNotFound } from './Pages/PageNotFound';\nimport { Homepage } from './Pages/Homepage';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <div className=\"App App__container\">\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/\" element={<Homepage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\":id\" element={<Homepage />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}